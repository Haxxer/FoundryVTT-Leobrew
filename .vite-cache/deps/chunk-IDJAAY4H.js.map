{
  "version": 3,
  "sources": ["../../node_modules/@typhonjs-fvtt/runtime/node_modules/@typhonjs-fvtt/svelte/_dist/util/index.js"],
  "sourcesContent": ["import { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\n\nconst s_TAG_OBJECT = '[object Object]';\n\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj)\n{\n   if (Object.prototype.toString.call(target) !== s_TAG_OBJECT)\n   {\n      throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n   }\n\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT)\n      {\n         throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n      }\n   }\n\n   return _deepMerge(target, ...sourceObj);\n}\n\n/**\n * Tests for whether an object is iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isIterableAsync(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value)\n{\n   return value !== null && typeof value === 'object';\n}\n\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: {}, new Object() or Object.create(null).\n *\n * @param {*} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value)\n{\n   if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) { return false; }\n\n   const prototype = Object.getPrototypeOf(value);\n   return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue = void 0)\n{\n   if (typeof data !== 'object') { return defaultValue; }\n   if (typeof accessor !== 'string') { return defaultValue; }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If the next level of object access is undefined or null then return the empty string.\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n      data = data[access[cntr]];\n   }\n\n   return data;\n}\n\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        value - A new value to set if an entry for accessor is found.\n *\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                       'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n      if (Array.isArray(data))\n      {\n         const number = (+access[cntr]);\n\n         if (!Number.isInteger(number) || number < 0) { return false; }\n      }\n\n      if (cntr === access.length - 1)\n      {\n         switch (operation)\n         {\n            case 'add':\n               data[access[cntr]] += value;\n               break;\n\n            case 'div':\n               data[access[cntr]] /= value;\n               break;\n\n            case 'mult':\n               data[access[cntr]] *= value;\n               break;\n\n            case 'set':\n               data[access[cntr]] = value;\n               break;\n\n            case 'set-undefined':\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\n               break;\n\n            case 'sub':\n               data[access[cntr]] -= value;\n               break;\n         }\n      }\n      else\n      {\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         // Abort if the next level is null or not an object and containing a value.\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n         data = data[access[cntr]];\n      }\n   }\n\n   return true;\n}\n\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj)\n{\n   // Iterate and merge all source objects into target.\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      const obj = sourceObj[cntr];\n\n      for (const prop in obj)\n      {\n         if (Object.prototype.hasOwnProperty.call(obj, prop))\n         {\n            // Handle the special property starting with '-=' to delete keys.\n            if (prop.startsWith('-='))\n            {\n               delete target[prop.slice(2)];\n               continue;\n            }\n\n            // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n            // otherwise assign obj[prop] to target[prop].\n            target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n            obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n         }\n      }\n   }\n\n   return target;\n}\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n */\nclass A11yHelper\n{\n   /**\n    * Apply focus to the HTMLElement targets in a given A11yFocusSource data object. An iterable list `options.focusEl`\n    * can contain HTMLElements or selector strings. If multiple focus targets are provided in a list then the first\n    * valid target found will be focused. If focus target is a string then a lookup via `document.querySelector` is\n    * performed. In this case you should provide a unique selector for the desired focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource|{ focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? focusOpts.debug : false;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `, focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target instanceof HTMLElement && target.isConnected)\n               {\n                  target.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element instanceof HTMLElement && element.isConnected)\n                  {\n                     element.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] Optional element to start query.\n    *\n    * @param {object}            [options] - Optional parameters.\n    *\n    * @param {boolean}           [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>}  [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>}  [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @param {string}            [options.selectors] - Custom list of focusable selectors for `querySelectorAll`.\n    *\n    * @returns {Array<HTMLElement>} Child keyboard focusable\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements, selectors } = {})\n   {\n      if (!(element instanceof HTMLElement) && !(element instanceof Document))\n      {\n         throw new TypeError(`'element' is not a HTMLElement or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !(ignoreElements instanceof Set))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      const allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         return allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         return allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent|MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {HTMLElement|string} [options.focusEl] - A specific HTMLElement or selector string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !(focusEl instanceof HTMLElement) && typeof focusEl !== 'string')\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         return {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n      }\n\n      if (!(event instanceof KeyboardEvent) && !(event instanceof MouseEvent))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent or MouseEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {HTMLElement} */\n      const targetEl = event.target;\n\n      if (!(targetEl instanceof HTMLElement))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event.target' is not an HTMLElement.`);\n      }\n\n      const result = { debug };\n\n      if (event instanceof MouseEvent)\n      {\n         // Firefox currently (1/23) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            const rect = targetEl.getBoundingClientRect();\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n            result.source = 'keyboard';\n         }\n         else\n         {\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = focusEl !== void 0 ? [focusEl] : void 0;\n         }\n      }\n      else\n      {\n         const rect = targetEl.getBoundingClientRect();\n         result.x = x ?? rect.left + (rect.width / 2);\n         result.y = y ?? rect.top + (rect.height / 2);\n         result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n         result.source = 'keyboard';\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {HTMLElement} [el] - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || !(el instanceof HTMLElement) || el?.hidden || !el?.isConnected)\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = el.getAttribute('tabindex');\n      const tabindexFocusable = typeof tabindexAttr === 'string' && tabindexAttr !== '-1';\n\n      const isAnchor = el instanceof HTMLAnchorElement;\n\n      if (contenteditableFocusable || tabindexFocusable || isAnchor || el instanceof HTMLButtonElement ||\n       el instanceof HTMLDetailsElement || el instanceof HTMLEmbedElement || el instanceof HTMLIFrameElement ||\n        el instanceof HTMLInputElement || el instanceof HTMLObjectElement || el instanceof HTMLSelectElement ||\n         el instanceof HTMLTextAreaElement)\n      {\n         if (isAnchor && anchorHref && typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {HTMLElement|string}   data - Either an HTMLElement or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return data instanceof HTMLElement || typeof data === 'string';\n   }\n}\n\n/**\n * @typedef {object} A11yFocusSource - Provides essential data to return focus to an HTMLElement after a series of UI\n * actions like working with context menus and modal dialogs.\n *\n * @property {boolean} [debug] - When true logs to console the actions taken in {@link A11yHelper.applyFocusSource}.\n *\n * @property {Iterable<HTMLElement|string>} [focusEl] - List of targets to attempt to focus.\n *\n * @property {string} [source] - The source of the event: 'keyboard' for instance.\n *\n * @property {number} [x] - Potential X coordinate of initial event.\n *\n * @property {number} [y] - Potential Y coordinate of initial event.\n */\n\n/**\n * Provides management of a single Promise that can be shared and accessed across JS & Svelte components. This allows a\n * Promise to be created and managed as part of the TRL application lifecycle and accessed safely in various control\n * flow scenarios. When resolution of the current managed Promise starts further interaction is prevented.\n *\n * Note: to enable debugging / log statements set the static `logging` variable to true.\n */\nclass ManagedPromise\n{\n   /** @type {boolean} */\n   static #logging = false;\n\n   /** @type {{ isProcessing?: boolean, promise?: Promise, reject: Function, resolve: Function }} */\n   #current;\n\n   /**\n    * @returns {boolean} Whether global logging is enabled.\n    */\n   static get logging()\n   {\n      return this.#logging;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise.\n    */\n   get isActive()\n   {\n      return this.#current !== void 0;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise and resolution is currently being processed.\n    */\n   get isProcessing()\n   {\n      return this.#current !== void 0 ? this.#current.isProcessing : false;\n   }\n\n   /**\n    * Sets global logging enabled state.\n    *\n    * @param {boolean}  logging - New logging enabled state.\n    */\n   static set logging(logging)\n   {\n      if (typeof logging !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.logging error: 'logging' is not a boolean.`);\n      }\n\n      this.#logging = logging;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Resolves any current Promise with undefined and creates a new current Promise.\n    *\n    * @template T\n    *\n    * @param {object} opts - Options.\n    *\n    * @param {boolean}  [opts.reuse=false] - When true if there is an existing live Promise it is returned immediately.\n    *\n    * @returns {Promise<T>} The new current managed Promise.\n    */\n   create({ reuse = false } = {})\n   {\n      if (typeof reuse !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.create error: 'reuse' is not a boolean.`);\n      }\n\n      if (reuse && this.#current !== void 0 && this.#current.promise instanceof Promise)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.create info: Reusing / returning existing managed Promise.`);\n         }\n\n         return this.#current.promise;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(\n             `[TRL] ManagedPromise.create info: Creating a new Promise and resolving existing immediately.`);\n         }\n\n         this.#current.resolve(void 0);\n         this.#current = void 0;\n      }\n\n      const promise = new Promise((resolve, reject) =>\n      {\n         this.#current = {\n            isProcessing: false,\n            reject,\n            resolve\n         };\n      });\n\n      this.#current.promise = promise;\n\n      return promise;\n   }\n\n   /**\n    * Gets the current Promise if any.\n    *\n    * @returns {Promise<any>} Current Promise.\n    */\n   get()\n   {\n      return this.#current ? this.#current.promise : void 0;\n   }\n\n   /**\n    * Rejects the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to reject.\n    *\n    * @returns {boolean} Was the promise rejected.\n    */\n   reject(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         this.#current.isProcessing = true;\n\n         if (result instanceof Promise)\n         {\n            result.then((value) =>\n            {\n               this.#current.reject(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.reject(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject warning: No current managed Promise to reject.`);\n         }\n\n         return false;\n      }\n   }\n\n   /**\n    * Resolves the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to resolve.\n    *\n    * @returns {boolean} Was the promise resolved.\n    */\n   resolve(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (result instanceof Promise)\n         {\n            this.#current.isProcessing = true;\n\n            result.then((value) =>\n            {\n               this.#current.resolve(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.resolve(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve warning: No current managed Promise to resolve.`);\n         }\n\n         return false;\n      }\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText()\n   {\n      let result;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await globalThis.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      let success = false;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            await globalThis.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (globalThis?.document?.execCommand instanceof Function)\n      {\n         const textArea = globalThis.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         globalThis.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Provides a solid string hashing algorithm.\n *\n * Sourced from: https://stackoverflow.com/a/52171480\n *\n * @param {string}   str - String to hash.\n *\n * @param {number}   seed - A seed value altering the hash.\n *\n * @returns {number} Hash code.\n */\nfunction hashCode(str, seed = 0)\n{\n   if (typeof str !== 'string') { return 0; }\n\n   let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n   for (let ch, i = 0; i < str.length; i++)\n   {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n   }\n\n   h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n   h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n   return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nconst s_UUIDV4_REGEX = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n/**\n * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n *\n * This code is an evolution of the following Gist.\n * https://gist.github.com/jed/982883\n *\n * There is a public domain / free copy license attached to it that is not a standard OSS license...\n * https://gist.github.com/jed/982883#file-license-txt\n *\n * @returns {string} UUIDv4\n */\nfunction uuidv4()\n{\n   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (c ^ (globalThis.crypto || globalThis.msCrypto).getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\n/**\n * Validates that the given string is formatted as a UUIDv4 string.\n *\n * @param {string}   uuid - UUID string to test.\n *\n * @returns {boolean} Is UUIDv4 string.\n */\nuuidv4.isValid = (uuid) => s_UUIDV4_REGEX.test(uuid);\n\n/**\n * Normalizes a string.\n *\n * @param {string}   query - A string to normalize for comparisons.\n *\n * @returns {string} Cleaned string.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nfunction normalizeString(query)\n{\n   return query.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, ''); // eslint-disable-line no-control-regex\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n *\n * @see https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return { node, reason: `flex-item; z-index: ${computedStyle.zIndex}` };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return { node, reason: `child of grid container; z-index: ${computedStyle.zIndex}` };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return { node, reason: `contain: ${contain}` };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {object} StackingContext\n *\n * @property {Element} node - A DOM Element.\n *\n * @property {string}  reason - Reason for why a stacking context was created.\n */\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of StyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of StyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via the\n * 'version' option. This version number is assigned to the associated style element. When a StyleManager instance is\n * created and there is an existing instance with a version that is lower than the current instance all CSS rules are\n * removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link StyleManager.setProperty} and\n * {@link StyleManager.setProperties} to `false` when loading initial values.\n */\nclass StyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    *\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      // TODO: Verify 'document' type from Popout FVTT module. For some reason the popout document trips this\n      //  unintentionally.\n      // if (!(document instanceof Document))\n      // {\n      //    throw new TypeError(`StyleManager error: 'document' is not an instance of Document.`);\n      // }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing StyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {StyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new StyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {Object<string, string>}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nconst s_REGEX = /(\\d+)\\s*px/;\n\n/**\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n *\n * @param {string}   value - Value to parse.\n *\n * @returns {number|undefined} The integer component of a pixel string.\n */\nfunction styleParsePixels(value)\n{\n   if (typeof value !== 'string') { return void 0; }\n\n   const isPixels = s_REGEX.test(value);\n   const number = parseInt(value);\n\n   return isPixels && Number.isFinite(number) ? number : void 0;\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== void 0 ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseSvelteConfig(config, thisArg = void 0)\n{\n   if (typeof config !== 'object')\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    typeof config.context !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && typeof config.options !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (isObject(result))\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (isObject(svelteConfig.context))\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (isObject(svelteConfig.children))\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('#external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (isObject(result))\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (isObject(props))\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\n/**\n * Wraps a callback in a debounced timeout.\n *\n * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n *\n * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n *\n * @param {number}   delay - An amount of time in milliseconds to delay.\n *\n * @returns {Function} A wrapped function that can be called to debounce execution.\n */\nfunction debounce(callback, delay)\n{\n   let timeoutId;\n\n   return function(...args)\n   {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => { callback.apply(this, args); }, delay);\n   };\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {*}  target - Any target to test.\n *\n * @param {Function} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype)\n{\n   /* c8 ignore next */\n   if (typeof target !== 'function') { return false; }\n\n   if (target === Prototype) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto))\n   {\n      if (proto === Prototype) { return true; }\n   }\n\n   return false;\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\nfunction isSpace(character) {\n    return character == \" \" || character == \"\\n\" || character == \"\\r\" || character == \"\\t\";\n}\nfunction isQuote(character) {\n    return character == '\"' || character == \"'\";\n}\nconst TAG_START = \"<\";\nconst TAG_END = \">\";\nconst ENCODED_TAG_START = \"&lt;\";\nconst ENCODED_TAG_END = \"&gt;\";\nclass InPlaintextState {\n    constructor(options) {\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_START) {\n            transition(new InTagNameState(this.options));\n            return \"\";\n        }\n        else if (character == TAG_END && this.options.encodePlaintextTagDelimiters) {\n            return ENCODED_TAG_END;\n        }\n        return character;\n    }\n}\nclass InTagNameState {\n    constructor(options) {\n        this.options = options;\n        this.nameBuffer = \"\";\n        this.isClosingTag = false;\n    }\n    consume(character, transition) {\n        if (this.nameBuffer.length == 0) {\n            if (isSpace(character)) {\n                transition(new InPlaintextState(this.options));\n                return ((this.options.encodePlaintextTagDelimiters ? ENCODED_TAG_START : \"<\") +\n                    character);\n            }\n            if (character == \"/\") {\n                this.isClosingTag = true;\n                return \"\";\n            }\n        }\n        if (isSpace(character)) {\n            if (this.isNameBufferAnAllowedTag()) {\n                transition(new InTagState(0 /* TagMode.Allowed */, this.options));\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                transition(new InTagState(1 /* TagMode.Disallowed */, this.options));\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == TAG_START) {\n            this.nameBuffer += ENCODED_TAG_START;\n            return \"\";\n        }\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n            if (this.isNameBufferAnAllowedTag()) {\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == \"-\" && this.nameBuffer == \"!-\") {\n            transition(new InCommentState(this.options));\n            return \"\";\n        }\n        this.nameBuffer += character;\n        return \"\";\n    }\n    isNameBufferAnAllowedTag() {\n        const tagName = this.nameBuffer.toLowerCase();\n        if (this.options.allowedTags) {\n            return this.options.allowedTags.has(tagName);\n        }\n        else if (this.options.disallowedTags) {\n            return !this.options.disallowedTags.has(tagName);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass InTagState {\n    constructor(mode, options) {\n        this.mode = mode;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (isQuote(character)) {\n            transition(new InQuotedStringInTagState(this.mode, character, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InQuotedStringInTagState {\n    constructor(mode, quoteCharacter, options) {\n        this.mode = mode;\n        this.quoteCharacter = quoteCharacter;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == this.quoteCharacter) {\n            transition(new InTagState(this.mode, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else if (character == TAG_END) {\n            return ENCODED_TAG_END;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InCommentState {\n    constructor(options) {\n        this.options = options;\n        this.consecutiveHyphens = 0;\n    }\n    consume(character, transition) {\n        if (character == \">\" && this.consecutiveHyphens >= 2) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (character == \"-\") {\n            this.consecutiveHyphens++;\n        }\n        else {\n            this.consecutiveHyphens = 0;\n        }\n        return \"\";\n    }\n}\n\nconst DefaultStateMachineOptions = {\n    tagReplacementText: \"\",\n    encodePlaintextTagDelimiters: true,\n};\nclass StateMachine {\n    constructor(partialOptions = {}) {\n        this.state = new InPlaintextState(Object.assign(Object.assign({}, DefaultStateMachineOptions), partialOptions));\n        this.transitionFunction = ((next) => {\n            this.state = next;\n        }).bind(this);\n    }\n    consume(text) {\n        let outputBuffer = \"\";\n        for (const character of text) {\n            outputBuffer += this.state.consume(character, this.transitionFunction);\n        }\n        return outputBuffer;\n    }\n}\nfunction striptags(text, options = {}) {\n    return new StateMachine(options).consume(text);\n}\n\n/**\n * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n *\n * @param {object}   data - Drop transfer data.\n *\n * @param {ParseDataTransferOptions}   opts - Optional parameters.\n *\n * @returns {string|undefined} Foundry UUID for drop data.\n */\nfunction getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n{\n   if (typeof data !== 'object') { return void 0; }\n   if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n   let uuid = void 0;\n\n   if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n   {\n      const isCompendium = data.uuid.startsWith('Compendium');\n\n      if (isCompendium && compendium)\n      {\n         uuid = data.uuid;\n      }\n      else if (world)\n      {\n         uuid = data.uuid;\n      }\n   }\n   else // v9 and below parsing.\n   {\n      if (actor && world && data.actorId && data.type)\n      {\n         uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n      }\n      else if (typeof data.id === 'string') // v9 and below uses `id`\n      {\n         if (compendium && typeof data.pack === 'string')\n         {\n            uuid = `Compendium.${data.pack}.${data.id}`;\n         }\n         else if (world)\n         {\n            uuid = `${data.type}.${data.id}`;\n         }\n      }\n   }\n\n   return uuid;\n}\n\n/**\n * @typedef {object} ParseDataTransferOptions\n *\n * @property {boolean}  [actor=true] - Accept actor owned documents.\n *\n * @property {boolean}  [compendium=true] - Accept compendium documents.\n *\n * @property {boolean}  [world=true] - Accept world documents.\n *\n * @property {string[]|undefined}   [types] - Require the `data.type` to match entry in `types`.\n */\n\nexport { A11yHelper, ClipboardAccess, ManagedPromise, StyleManager, debounce, deepMerge, getStackingContext, getUUIDFromDataTransfer, hasAccessor, hasGetter, hasPrototype, hasSetter, hashCode, isApplicationShell, isHMRProxy, isIterable, isIterableAsync, isObject, isPlainObject, isSvelteComponent, klona, normalizeString, outroAndDestroy, parseSvelteConfig, safeAccess, safeSet, striptags, styleParsePixels, uuidv4 };\n//# sourceMappingURL=index.js.map\n"],
  "mappings": "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",
  "names": ["document"]
}
